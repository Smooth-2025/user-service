services:
  # Redis 캐시 컨테이너 정의
  redis:
    image: redis:7-alpine
    container_name: smooth-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # 백엔드 애플리케이션 컨테이너 정의
  backend:
    # ECR 이미지를 사용하도록 지정
    image: ${ECR_IMAGE_URI}
    container_name: user-service
    ports:
      - "8080:8080"
    # Redis 컨테이너가 먼저 실행되도록 의존성 설정
    depends_on:
      - redis
    # 환경 변수 설정
    environment:
      # application-prod.yml 파일을 사용하도록 지정
      - spring.profiles.active=prod
      - spring.data.redis.host=redis

      # Redis 환경변수
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}

      # RDS 환경변수
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}

      # 로그레벨
      - LOGGING_LEVEL_COM_SMOOTH_BACKEND=${LOG_LEVEL:-INFO}

      - APP_COOKIE_SECURE=${COOKIE_SECURE:-false}
    restart: unless-stopped

# 데이터 영속성을 위한 볼륨 정의
volumes:
  redis_data: